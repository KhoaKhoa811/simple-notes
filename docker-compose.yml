services:
  notes-mysql:
    image: mysql:8.0
    container_name: notes-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: notesdb
      MYSQL_USER: notesuser
      MYSQL_PASSWORD: notespass
    ports:
      - "3308:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - jenkins-net

  notes-app:
    build: .
    container_name: notes-app
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      - notes-mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://notes-mysql:3306/notesdb
      SPRING_DATASOURCE_USERNAME: notesuser
      SPRING_DATASOURCE_PASSWORD: notespass
    networks:
      - jenkins-net

  jenkins-master:
    build:
      context: .
      dockerfile: Dockerfile-jenkins
    container_name: jenkins-master
    restart: always
    privileged: true
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - jenkins-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/login" ]
      interval: 10s
      retries: 10

  jenkins-agent:
    build:
      context: .
      dockerfile: Dockerfile-agent
    container_name: jenkins-agent
    depends_on:
      jenkins-master:
        condition: service_healthy
    environment:
      JENKINS_URL: http://jenkins-master:8080
      JENKINS_AGENT_NAME: jenkins-agent
      JENKINS_SECRET: a9a548af55e211ba545cc82f4ded0c6df7a4cd07dd251cb0627fb8400694fb9a
    volumes:
      - jenkins-agent-data:/home/jenkins/agent
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - jenkins-net

volumes:
  mysql_data:
  jenkins-data:
  jenkins-agent-data:

networks:
  jenkins-net:
    driver: bridge
